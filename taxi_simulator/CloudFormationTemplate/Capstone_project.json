{
"AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create EC2, kinesis, Lambda and map Lambda with kinesis",
    "Parameters" : {
        "InstanceTypeParameter" : {
          "Type" : "String",
          "Default" : "t2.micro",
          "AllowedValues" : ["t2.micro", "t1.micro", "t2.small"],
          "Description" : "Enter any option from array above. Default is t2.micro."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "IAMRoleName":{
            "Type": "String",
            "Description": "Create correct role before running template or if you have role in place give correct name",
            "Default": "EC2_Multi_Role",
            "AllowedPattern" : ".+"
        },
        "KinesisName":{
            "Type" : "String",
            "Default" : "taxi-movement",
            "Description" : "Enter name of your kinesis stream",
            "AllowedPattern" : ".+"
        },
        "S3BucketForLambda":{
            "Type": "String",
            "Description": "Please enter s3 bucket name in which you have added .zip file for code. This is mandotary",
            "Default": "gl-capstone",
            "AllowedPattern" : ".+"
        },
        "S3KeyForLambda":{
            "Type": "String",
            "Description": "Please enter s3 key name. This is mandotary",
            "Default": "KinesisLambda.zip",
            "AllowedPattern" : ".+"
        },
        "BackendBASEURL":{
            "Type": "String",
            "Description": "Please enter BASE URL. This is mandotary",
            "Default": "https://fep34ikk65.execute-api.us-east-1.amazonaws.com/dev",
            "AllowedPattern" : ".+"
        }
    },
    "Resources": {
        "EC2AccessSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
               "GroupDescription" : "Allow only SSH access to EC2 instance",
               "SecurityGroupIngress" : [
                   {"IpProtocol": "tcp", "FromPort": 22, "ToPort": 22, "CidrIp": "0.0.0.0/0"}
                ]
            }
        },
        "Ec2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
               "Path": "/",
               "Roles": [ {"Ref": "IAMRoleName"} ]
            }
        },
        "EC2ForSimulator":{
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "ImageId": "ami-0747bdcabd34c712a",
                "InstanceType": { "Ref": "InstanceTypeParameter" },
                "KeyName": {"Ref": "KeyName"},
                "SecurityGroups": [ {"Ref": "EC2AccessSecurityGroup"} ],
                "IamInstanceProfile": {"Ref": "Ec2InstanceProfile"},
                "Tags": [{"Key":"Capstone_project", "Value":"CPProject"}]
            }
        },
        "KinesisStream": {
            "Type": "AWS::Kinesis::Stream", 
            "Properties": {
                "Name": {"Ref": "KinesisName"},
                "ShardCount" : 7 
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [{ "Effect": "Allow", "Principal": {"Service": ["lambda.amazonaws.com"]}, "Action": ["sts:AssumeRole"] }]
              },
              "Path": "/",
              "Policies": [{
                "PolicyName": "lambda_default",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [{ "Effect": "Allow", "Action": ["logs:*"], "Resource": "arn:aws:logs:*:*:*" }]
                }
              },{
                "PolicyName": "Lambda_Kinesis_Role",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [{"Effect": "Allow","Action": "kinesis:*","Resource": "*"}]
                }
              }
            ]
            }
        },
        "MapKinesisToLambda":{
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "EventSourceArn": {"Fn::GetAtt": [
                    "KinesisStream",
                    "Arn"
                ]},
                "FunctionName": {
                    "Fn::GetAtt": [
                        "CreateLambda",
                        "Arn"
                    ]
                },
                "StartingPosition": "LATEST",
                "BatchSize" : 100
            }
        },
        "CreateLambda":{
            "Type": "AWS::Lambda::Function",
            "Properties" : {
                "Timeout" : 35,
                "Code": {
                    "S3Bucket": { "Ref" : "S3BucketForLambda" },
                    "S3Key": { "Ref" : "S3KeyForLambda" }
                },
                "Runtime": "python3.9",
                "Environment":{
                    "Variables" : {"BASE_URL" : { "Ref" : "BackendBASEURL" }, "ROUTE":"/api/users/updateuser"} 
                },
                "FunctionName" : "taxi-movement",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Handler" : "lambda_function.lambda_handler"
            }
        }
    },
    "Outputs": {
        "KinesisName":{
            "Description": "Name of bucket",  
            "Value" : { "Ref" : "KinesisStream" }
        }
    }
}